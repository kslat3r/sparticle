# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: sparticle-engine
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  apiGateway:
    shouldStartNameWithService: true

  stage: v1
  region: eu-west-2

  httpApi:
    cors: true

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "polly:StartSpeechSynthesisTask"
        - "polly:GetSpeechSynthesisTask"
      Resource: "*"
    - Effect: "Allow"
      Action:
        - "s3:PutObject"
        - "s3:PutObjectAcl"
      Resource: "arn:aws:s3:::sparticle-engine-prod-audio/*"
    - Effect: Allow
      Action:
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:eu-west-2:690524749915:table/articles"
    - Effect: Allow
      Action:
        - dynamodb:Query
      Resource: "arn:aws:dynamodb:eu-west-2:690524749915:table/articles/index/sessionIdIndex"
    - Effect: Allow
      Action:
        - dynamodb:Query
      Resource: "arn:aws:dynamodb:eu-west-2:690524749915:table/articles/index/encodedUrlIndex"

functions:
  authorize:
    handler: handler.authorize
    environment: 
      JWT_SECRET_KEY: ${ssm:/jwt-secret-key~true}
    events:
      - httpApi:
          path: /authorize
          method: post
  createArticle:
    handler: handler.createArticle
    environment: 
      JWT_SECRET_KEY: ${ssm:/jwt-secret-key~true}
    events:
      - httpApi:
          path: /articles
          method: post
    timeout: 10
  getArticles:
    handler: handler.getArticles
    environment: 
      JWT_SECRET_KEY: ${ssm:/jwt-secret-key~true}
    events:
      - httpApi:
          path: /articles
          method: get
  getArticle:
    handler: handler.getArticle
    environment: 
      JWT_SECRET_KEY: ${ssm:/jwt-secret-key~true}
    events:
      - httpApi:
          path: /articles/{id}
          method: get
  deleteArticle:
    handler: handler.deleteArticle
    environment: 
      JWT_SECRET_KEY: ${ssm:/jwt-secret-key~true}
    events:
      - httpApi:
          path: /articles/{id}
          method: delete
  updateAudioAcl:
    handler: handler.updateAudioAcl
    events:
      - s3:
          bucket: sparticle-engine-prod-audio
          event: s3:ObjectCreated:*
          existing: true